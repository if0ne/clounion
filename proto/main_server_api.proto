syntax = "proto3";

package main_server_api;

message EmptyResponse {}

enum ObjectType {
  SmallFile = 0;
  LargeFile = 1;
}

service MainServerServiceApi {
  rpc create_small_file(CreateFileRequest) returns (CreateSmallFileResponse);
  rpc create_large_file(CreateFileRequest) returns (CreateLargeFileResponse);

  rpc get_small_file(GetSmallFileRequest) returns (BlockInfo);
  rpc get_last_version_small_file(GetSmallFileLastVersionRequest) returns (BlockInfo);
  rpc add_commit_to_small_file(AddCommitSmallFileRequest) returns (BlockInfo);

  rpc get_large_file(GetLargeFileRequest) returns (LargeFileResponse);

  rpc delete_file(DeleteFileRequest) returns (EmptyResponse);

  rpc get_files(FileRequest) returns (FileResponse);
}

message BlockInfo {
  bytes block_id = 1;
  uint64 part = 2;
  string endpoint = 3;
}

message FileRequest {
  string prefix = 1;
  bytes user_id = 2;
}

message ObjectResponse {
  string filename = 1;
  ObjectType type = 2;
}

message FileResponse {
  repeated ObjectResponse files = 1;
}

message CreateFileRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
  uint64 size = 4;
}

message CreateSmallFileResponse {
  BlockInfo block = 1;
}

message CreateLargeFileResponse {
  repeated BlockInfo blocks = 1;
}

message DeleteFileRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
}

message GetSmallFileRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
  uint64 index = 4;
}

message GetLargeFileRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
}

message GetSmallFileLastVersionRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
}

message AddCommitSmallFileRequest {
  string filename = 1;
  bytes user_id = 2;
  repeated bytes group_ids = 3;
}

message LargeFileResponse {
  repeated BlockInfo blocks = 1;
}